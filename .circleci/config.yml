version: 2.1
orbs:
  node: circleci/node@5.0.2

jobs:
  build-production:
    machine:
      image: ubuntu-2204:2024.01.2
    resource_class: arm.medium
    steps:
      - run:
          name: validate branch and repo
          command: echo $CIRCLE_BRANCH && echo $CIRCLE_REPOSITORY_URL
      - run:
          name: checkout
          command: git clone -b "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL" .
      - node/install:
          install-yarn: false
          node-version: "16.20.0"
      - run:
          name: list dir
          command: ls
      - run:
          name: verify node version
          command: node --version
      - run:
          name: install angular 15.0.1
          command: npm install -g @angular/cli@15.1.0
      - run:
          name: install package
          command: npm install -f
      - run:
          name: npm version patch --no-git-tag-version
          command: npm version patch --no-git-tag-version
      - run:
          name: build angular
          command: ng build --configuration=development --output-hashing=all
      - run:
          name: Login to dockerhub
          command: |
            echo "$DOCKER_PASS" | docker login  --username $DOCKER_USER --password-stdin
      - run:
          name: Build dockerfile
          command: |
            docker build --no-cache -t dockerhiscis/frontend-ois:$CIRCLE_SHA1 .
      - run:
          name: Push Docker Image
          command: |
            docker push dockerhiscis/frontend-ois:$CIRCLE_SHA1
            docker tag dockerhiscis/frontend-ois:$CIRCLE_SHA1 dockerhiscis/frontend-ois:development-latest
            docker push dockerhiscis/frontend-ois:development-latest
      - add_ssh_keys:
          fingerprints:
            - "7a:54:b4:aa:a2:32:67:43:d9:06:5e:90:eb:0c:19:c2"
      - run:
          name: Deploy app to development server
          command: |
            ssh -o StrictHostKeyChecking=no root@174.138.22.139 "cd /home/frontend-ois-circle/ && docker-compose down && docker pull dockerhiscis/frontend-ois:development-latest && docker-compose up -d"
workflows:
  basic-workflow:
    jobs:
      - build-production:
          filters:
            branches:
              only:
                - production
